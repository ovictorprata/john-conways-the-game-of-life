{"ast":null,"code":"export default {\n  props: {\n    statusObj: {\n      default: function () {\n        return {\n          isAlive: false\n        };\n      },\n      type: Object\n    },\n    xPos: {\n      default: -1,\n      type: Number\n    },\n    yPos: {\n      default: -1,\n      type: Number\n    },\n    isMouseDown: {\n      default: false,\n      type: Boolean\n    }\n  },\n  data() {\n    return {\n      // The status for a single cell.\n      // Sadly it is an anti pattern because ES2015 / Vue\n      // do have some problems to deal with a 2D-Array (not-reactive).\n      // If you have a different idea how to fix this create an issue :)\n      isAlive: this.statusObj\n    };\n  },\n  methods: {\n    /**\n     * Checks if the cell has been clicked\n     * and switches its isAlive status.\n     * Also emits to the grid component for the\n     * drag and drop functionality.\n     *\n     * @param {boolean} bool - the isMouseDown boolean\n     */\n    reborn: function (bool) {\n      if (bool) {\n        this.isAlive.isAlive = !this.isAlive.isAlive;\n        this.$emit(\"wasUpdated\", this.isAlive.isAlive);\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"AASA;EACAA;IACAC;MACAC;QACA;UAAAC;QAAA;MACA;MACAC;IACA;IACAC;MACAH;MACAE;IACA;IACAE;MACAJ;MACAE;IACA;IACAG;MACAL;MACAE;IACA;EACA;EACAI;IACA;MACA;MACA;MACA;MACA;MACAL;IACA;EACA;EACAM;IACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACAC;MACA;QACA;QACA;MACA;IACA;EACA;AACA","names":["props","statusObj","default","isAlive","type","xPos","yPos","isMouseDown","data","methods","reborn"],"sourceRoot":"src/components","sources":["GridCell.vue"],"sourcesContent":["<template>\n  <div\n    :class=\"isAlive.isAlive ? 'alive' : 'dead'\"\n    class=\"cell\"\n    @mousedown=\"reborn(true)\"\n    @mouseover=\"reborn(isMouseDown)\"\n  />\n</template>\n<script>\nexport default {\n  props: {\n    statusObj: {\n      default: function () {\n        return { isAlive: false };\n      },\n      type: Object,\n    },\n    xPos: {\n      default: -1,\n      type: Number,\n    },\n    yPos: {\n      default: -1,\n      type: Number,\n    },\n    isMouseDown: {\n      default: false,\n      type: Boolean,\n    },\n  },\n  data() {\n    return {\n      // The status for a single cell.\n      // Sadly it is an anti pattern because ES2015 / Vue\n      // do have some problems to deal with a 2D-Array (not-reactive).\n      // If you have a different idea how to fix this create an issue :)\n      isAlive: this.statusObj,\n    };\n  },\n  methods: {\n    /**\n     * Checks if the cell has been clicked\n     * and switches its isAlive status.\n     * Also emits to the grid component for the\n     * drag and drop functionality.\n     *\n     * @param {boolean} bool - the isMouseDown boolean\n     */\n    reborn: function (bool) {\n      if (bool) {\n        this.isAlive.isAlive = !this.isAlive.isAlive;\n        this.$emit(\"wasUpdated\", this.isAlive.isAlive);\n      }\n    },\n  },\n};\n</script>\n\n<style>\n.cell {\n  flex: 1;\n  user-select: none;\n  border-right: 1px solid #1a0707;\n  border-bottom: 1px solid #1a0707;\n  padding-bottom: 100%;\n}\n.cell:hover {\n  background-color: rgba(6, 60, 255, 0.6);\n}\n.alive {\n  background-color: #0256ff !important;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}